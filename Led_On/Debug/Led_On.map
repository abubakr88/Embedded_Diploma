Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000802000 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/libm.a
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x194
 *(.vectors)
 .vectors       0x0000000000000000      0x178 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000178                . = ALIGN (0x2)
                0x0000000000000178                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000178        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000178                __trampolines_end = .
 *(.progmem*)
                0x0000000000000178                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000178                __ctors_start = .
 *(.ctors)
                0x0000000000000178                __ctors_end = .
                0x0000000000000178                __dtors_start = .
 *(.dtors)
                0x0000000000000178                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000178        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
                0x0000000000000178                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000178        0xc /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000184        0x8 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
 *(.init9)
 *(.text)
 .text          0x000000000000018c        0x4 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
                0x000000000000018c                __vector_38
                0x000000000000018c                __vector_22
                0x000000000000018c                __vector_63
                0x000000000000018c                __vector_28
                0x000000000000018c                __vector_67
                0x000000000000018c                __vector_1
                0x000000000000018c                __vector_32
                0x000000000000018c                __vector_75
                0x000000000000018c                __vector_71
                0x000000000000018c                __vector_91
                0x000000000000018c                __vector_34
                0x000000000000018c                __vector_62
                0x000000000000018c                __vector_77
                0x000000000000018c                __vector_24
                0x000000000000018c                __vector_12
                0x000000000000018c                __vector_55
                0x000000000000018c                __vector_69
                0x000000000000018c                __vector_81
                0x000000000000018c                __vector_90
                0x000000000000018c                __vector_46
                0x000000000000018c                __bad_interrupt
                0x000000000000018c                __vector_72
                0x000000000000018c                __vector_6
                0x000000000000018c                __vector_31
                0x000000000000018c                __vector_92
                0x000000000000018c                __vector_35
                0x000000000000018c                __vector_78
                0x000000000000018c                __vector_74
                0x000000000000018c                __vector_39
                0x000000000000018c                __vector_3
                0x000000000000018c                __vector_23
                0x000000000000018c                __vector_68
                0x000000000000018c                __vector_30
                0x000000000000018c                __vector_73
                0x000000000000018c                __vector_45
                0x000000000000018c                __vector_25
                0x000000000000018c                __vector_93
                0x000000000000018c                __vector_61
                0x000000000000018c                __vector_11
                0x000000000000018c                __vector_54
                0x000000000000018c                __vector_13
                0x000000000000018c                __vector_17
                0x000000000000018c                __vector_19
                0x000000000000018c                __vector_56
                0x000000000000018c                __vector_7
                0x000000000000018c                __vector_49
                0x000000000000018c                __vector_41
                0x000000000000018c                __vector_86
                0x000000000000018c                __vector_64
                0x000000000000018c                __vector_88
                0x000000000000018c                __vector_43
                0x000000000000018c                __vector_27
                0x000000000000018c                __vector_5
                0x000000000000018c                __vector_33
                0x000000000000018c                __vector_76
                0x000000000000018c                __vector_47
                0x000000000000018c                __vector_52
                0x000000000000018c                __vector_37
                0x000000000000018c                __vector_89
                0x000000000000018c                __vector_4
                0x000000000000018c                __vector_44
                0x000000000000018c                __vector_82
                0x000000000000018c                __vector_51
                0x000000000000018c                __vector_9
                0x000000000000018c                __vector_2
                0x000000000000018c                __vector_21
                0x000000000000018c                __vector_15
                0x000000000000018c                __vector_66
                0x000000000000018c                __vector_36
                0x000000000000018c                __vector_79
                0x000000000000018c                __vector_58
                0x000000000000018c                __vector_70
                0x000000000000018c                __vector_83
                0x000000000000018c                __vector_29
                0x000000000000018c                __vector_60
                0x000000000000018c                __vector_40
                0x000000000000018c                __vector_85
                0x000000000000018c                __vector_8
                0x000000000000018c                __vector_26
                0x000000000000018c                __vector_48
                0x000000000000018c                __vector_80
                0x000000000000018c                __vector_14
                0x000000000000018c                __vector_84
                0x000000000000018c                __vector_57
                0x000000000000018c                __vector_53
                0x000000000000018c                __vector_10
                0x000000000000018c                __vector_50
                0x000000000000018c                __vector_16
                0x000000000000018c                __vector_59
                0x000000000000018c                __vector_18
                0x000000000000018c                __vector_20
                0x000000000000018c                __vector_42
                0x000000000000018c                __vector_87
                0x000000000000018c                __vector_65
 .text          0x0000000000000190        0x0 ./main.o
 .text          0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
                0x0000000000000190                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
                0x0000000000000190                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000190        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
                0x0000000000000190                exit
                0x0000000000000190                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000190        0x4 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000194                _etext = .

.data           0x0000000000802000        0x0 load address 0x0000000000000194
                0x0000000000802000                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000802000        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
 .data          0x0000000000802000        0x0 ./main.o
 .data          0x0000000000802000        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000802000                . = ALIGN (0x2)
                0x0000000000802000                _edata = .
                0x0000000000802000                PROVIDE (__data_end, .)

.bss            0x0000000000802000        0x0
                0x0000000000802000                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000802000        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
 .bss           0x0000000000802000        0x0 ./main.o
 .bss           0x0000000000802000        0x0 /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000802000                PROVIDE (__bss_end, .)
                0x0000000000000194                __data_load_start = LOADADDR (.data)
                0x0000000000000194                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000802000        0x0
                0x0000000000802000                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000802000                PROVIDE (__noinit_end, .)
                0x0000000000802000                _end = .
                0x0000000000802000                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x990
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o
 .stab          0x00000000000006cc      0x258 ./main.o
                                        0x264 (size before relaxing)
 .stab          0x0000000000000924       0x6c /usr/lib/gcc/avr/4.9.1/avrxmega2/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)

.stabstr        0x0000000000000000      0x7b7
 *(.stabstr)
 .stabstr       0x0000000000000000      0x7b7 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avrxmega2/crtx32a4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 ./main.o
                                         0x22 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Led_On.elf elf32-avr)
LOAD linker stubs
