Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
                              ./segment.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
                              ./button.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
LOAD ./App_Seg.o
LOAD ./DIO.o
LOAD ./app.o
LOAD ./button.o
LOAD ./led.o
LOAD ./main.o
LOAD ./segment.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3dc
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.DISPLAY_SEG
                0x0000000000000054       0x14 ./segment.o
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x10 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000084        0x8 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008c        0x4 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
                0x000000000000008c                __vector_1
                0x000000000000008c                __vector_12
                0x000000000000008c                __bad_interrupt
                0x000000000000008c                __vector_6
                0x000000000000008c                __vector_3
                0x000000000000008c                __vector_11
                0x000000000000008c                __vector_13
                0x000000000000008c                __vector_17
                0x000000000000008c                __vector_19
                0x000000000000008c                __vector_7
                0x000000000000008c                __vector_5
                0x000000000000008c                __vector_4
                0x000000000000008c                __vector_9
                0x000000000000008c                __vector_2
                0x000000000000008c                __vector_15
                0x000000000000008c                __vector_8
                0x000000000000008c                __vector_14
                0x000000000000008c                __vector_10
                0x000000000000008c                __vector_16
                0x000000000000008c                __vector_18
                0x000000000000008c                __vector_20
 .text          0x0000000000000090        0x0 ./App_Seg.o
 .text          0x0000000000000090        0x0 ./DIO.o
 .text          0x0000000000000090        0x0 ./app.o
 .text          0x0000000000000090        0x0 ./button.o
 .text          0x0000000000000090        0x0 ./led.o
 .text          0x0000000000000090        0x0 ./main.o
 .text          0x0000000000000090        0x0 ./segment.o
 .text          0x0000000000000090        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000090        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000000090        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000090                . = ALIGN (0x2)
 *(.text.*)
 .text.APP_Seg_nit
                0x0000000000000090        0x4 ./App_Seg.o
                0x0000000000000090                APP_Seg_nit
 .text.APP_Seg_Count
                0x0000000000000094       0x26 ./App_Seg.o
                0x0000000000000094                APP_Seg_Count
 .text.DIO_Set_Direction
                0x00000000000000ba       0x6a ./DIO.o
                0x00000000000000ba                DIO_Set_Direction
 .text.DIO_Write_Pin
                0x0000000000000124       0x6a ./DIO.o
                0x0000000000000124                DIO_Write_Pin
 .text.DIO_Read_Pin
                0x000000000000018e       0x44 ./DIO.o
                0x000000000000018e                DIO_Read_Pin
 .text.APP_Init
                0x00000000000001d2        0x8 ./app.o
                0x00000000000001d2                APP_Init
 .text.app      0x00000000000001da       0x10 ./app.o
                0x00000000000001da                app
 .text.Button_Init
                0x00000000000001ea       0x14 ./button.o
                0x00000000000001ea                Button_Init
 .text.BUTTON_Get_State
                0x00000000000001fe        0xe ./button.o
                0x00000000000001fe                BUTTON_Get_State
 .text.LED_Init
                0x000000000000020c       0x20 ./led.o
                0x000000000000020c                LED_Init
 .text.LED_Set_ON
                0x000000000000022c        0xe ./led.o
                0x000000000000022c                LED_Set_ON
 .text.LED_Set_OFF
                0x000000000000023a        0xc ./led.o
                0x000000000000023a                LED_Set_OFF
 .text.LED_Toggle
                0x0000000000000246       0x10 ./led.o
                0x0000000000000246                LED_Toggle
 .text.startup.main
                0x0000000000000256        0xa ./main.o
                0x0000000000000256                main
 .text.SEGMENT_INIT
                0x0000000000000260       0xb6 ./segment.o
                0x0000000000000260                SEGMENT_INIT
 .text.DISPLAY_SEG
                0x0000000000000316       0xb6 ./segment.o
                0x0000000000000316                DISPLAY_SEG
 .text.libgcc.mul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000003cc        0xc /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
                0x00000000000003cc                __tablejump2__
                0x00000000000003d0                __tablejump__
 .text.libgcc.prologue
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
                0x00000000000003d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003d8        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                0x00000000000003d8                exit
                0x00000000000003d8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003d8        0x4 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003dc                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000003dc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./App_Seg.o
 .data          0x0000000000800060        0x0 ./DIO.o
 .data          0x0000000000800060        0x0 ./app.o
 .data          0x0000000000800060        0x0 ./button.o
 .data          0x0000000000800060        0x0 ./led.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./segment.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x1c
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800060        0x0 ./App_Seg.o
 .bss           0x0000000000800060        0x0 ./DIO.o
 .bss           0x0000000000800060        0x0 ./app.o
 .bss           0x0000000000800060        0x0 ./button.o
 .bss           0x0000000000800060        0x0 ./led.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 ./segment.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.g_BUTTON_Config
                0x0000000000800060        0x4 ./button.o
 .bss.g_LED_Config
                0x0000000000800064        0x4 ./led.o
 .bss.g_SEG_Cont_Config
                0x0000000000800068        0x4 ./segment.o
 .bss.g_SEG_D_Config
                0x000000000080006c        0x4 ./segment.o
 .bss.g_SEG_C_Config
                0x0000000000800070        0x4 ./segment.o
 .bss.g_SEG_B_Config
                0x0000000000800074        0x4 ./segment.o
 .bss.g_SEG_A_Config
                0x0000000000800078        0x4 ./segment.o
 *(COMMON)
                0x000000000080007c                PROVIDE (__bss_end, .)
                0x00000000000003dc                __data_load_start = LOADADDR (.data)
                0x00000000000003dc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080007c        0x0
                0x000000000080007c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080007c                PROVIDE (__noinit_end, .)
                0x000000000080007c                _end = .
                0x000000000080007c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x8b8
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc       0x6c /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000738       0xcc /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_tablejump.o)
                                         0xd8 (size before relaxing)
 .stab          0x0000000000000804       0xb4 /usr/lib/gcc/avr/4.9.1/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0xf6
 *(.stabstr)
 .stabstr       0x0000000000000000       0xf6 /usr/lib/gcc/avr/4.9.1/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 ./App_Seg.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000000       0x22 ./DIO.o
 .comment       0x0000000000000000       0x22 ./app.o
 .comment       0x0000000000000000       0x22 ./button.o
 .comment       0x0000000000000000       0x22 ./led.o
 .comment       0x0000000000000000       0x22 ./main.o
 .comment       0x0000000000000000       0x22 ./segment.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Embedded_C_Project.elf elf32-avr)
LOAD linker stubs
