/*
 * app.c
 *
 *  Created on: Jun 28, 2015
 *      Author: abubakr
 */


#include "app.h"

void APP_Init(void)
{
	UART_Init();
	LCD_init();
	EEPROM_Init();
	SET_BIT(DDRC,ROTATE_CLOCK_WISE);
	SET_BIT(DDRC,ROTATE_ANTI_CLOCK_WISE);
	SET_BIT(DDRD,BUZZER);

}


void authResponse(void){
	uint8 i, password[SIZE], savedPassword[SIZE];
	uint16 address=0;


	UART_SendByte(M2_READY); // MC2 is ready
	UART_ReceiveString(password);

	address = 0x0312;

	for (i=0;i<sizeof(savedPassword);i++){
		EEPROM_Read_Byte(address++, &savedPassword[i]); // Read 0x0F from the external EEPROM

	}

	LCD_clearScreen();
	LCD_displayString(savedPassword);
	_delay_ms(1000);

	LCD_clearScreen();
	LCD_displayString(password);
	_delay_ms(1000);


	if (!strcmp(password,savedPassword)){
		LCD_clearScreen();
		LCD_displayString("match");
		_delay_ms(1500);

		while(UART_RecieveByte() != M2_READY){} // wait until MC2 is ready
		UART_SendByte(0x01);

	}
	else{

		LCD_clearScreen();
		LCD_displayString("dismatch");
		_delay_ms(1500);
	}



//	return(0);
}

void savePassword(void){
	uint16 * address;
	uint8 i,passwd[SIZE],temp[SIZE];

	UART_SendByte(M2_READY); // MC2 is ready
	UART_ReceiveString(passwd);

	LCD_clearScreen();
	LCD_displayString(passwd);
	_delay_ms(1500);

	address = 0x0312; // the first address in the eeprom where to save the password.

	for (i=0;i<=sizeof(passwd);i++)
	{
		EEPROM_Write_Byte(address++, passwd[i]);
		_delay_ms(10);
	}

//	LCD_clearScreen();
//	LCD_displayString("temp");
//	_delay_ms(500);
//
//	address = 0x0312;
//
//	for (i=0;i<sizeof(temp);i++){
//		EEPROM_Read_Byte(address++, &temp[i]); // Read 0x0F from the external EEPROM
//
//	}
//
//	LCD_clearScreen();
//	LCD_displayString("temp2");
//	_delay_ms(500);
//
//
//	LCD_clearScreen();
//	LCD_displayString(temp);
//	_delay_ms(500);
//

}

void alert(void){
	SET_BIT(PORTD,BUZZER);
	_delay_ms(60000);
}

void openDoor(void){

// (Rotate clock wise - Open the Door)

	CLEAR_BIT(PORTC,ROTATE_ANTI_CLOCK_WISE);
	SET_BIT(PORTC,ROTATE_CLOCK_WISE);
	_delay_ms(5000);

// (Rotate anti-clock wise - Close the door)

	SET_BIT(PORTC,ROTATE_ANTI_CLOCK_WISE);
	CLEAR_BIT(PORTC,ROTATE_CLOCK_WISE);
	_delay_ms(5000);

// Stop MOTOR

	CLEAR_BIT(PORTC,ROTATE_CLOCK_WISE);
	CLEAR_BIT(PORTC,ROTATE_ANTI_CLOCK_WISE);

}
